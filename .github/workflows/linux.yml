name: Linux

on:
  push:
    tags:
    - 'v*'

  workflow_dispatch:

concurrency:
  group: linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    name: ${{ matrix.distro }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        distro:
            # - amazonlinux:2
            # - amazonlinux:2023
          #- centos:7 # and RHEL 7
          #- debian:10
          #- debian:11 # and Raspbian 11
          - debian:12 # and Raspbian 12
            # - fedora:36
            # - fedora:37
            # - fedora:38
            # - fedora:39
            # - opensuse/leap:15.3 # SLES 15.3
            # - opensuse/leap:15.4 # and SLES 15.4
            # - opensuse/leap:15.5 # and SLES 15.5
          #- rockylinux:8 # RHEL 8
          #- rockylinux:9 # RHEL 9
          #- ubuntu:20.04
          - ubuntu:22.04
          #- ubuntu:23.04
          #- ubuntu:23.10

    steps:
      - name: Checkout HEAD
        uses: actions/checkout@v3

      - name: Restore/backup ccache
        uses: actions/cache@v3
        with:
          path: ccache
          key: ccache/${{ matrix.distro }}

      - name: Build
        run: >-
          docker run --rm -v "$(pwd):/icinga2" -e DISTRO=${{ matrix.distro }}
          ${{ matrix.distro }} /icinga2/.github/workflows/linux.bash
      
      - name: Show infos
        run: pwd && ls -l

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: $(pwd)/build/*

  github-release:
    needs: build-linux
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: GitHub Release
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Extract current changes
        run: cat *.changes | sed '0,/^Changes:$/d' | sed '/Checksums.*/Q' | sed '1,2d' | tail >> ./current-changes

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: ./current-changes

      - name: Delete current changes file
        run: rm ./current-changes

      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: .
